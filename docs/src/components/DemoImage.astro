---

import { EyeIcon, EyeOffIcon } from "astro-feather";
import { Image } from "astro:assets";
import {
  getThumbHashAttribute,
  dynamicViteAssetImport,
  dd,
} from "../js/utils.js";

interface Props {
  strategy?: "canvas" | "image" | "average";
  title: string;
  imagePath: string;
}

const { imagePath, strategy = 'canvas', title } = Astro.props;
const image = (await dynamicViteAssetImport(imagePath)).default;

const absoluteImagePath = `${process.cwd()}/docs/public${imagePath}`;
const hash = await getThumbHashAttribute(absoluteImagePath);

---

<div class:list={["demo"]}>
  <h2>{title}</h2>
  <figure
    class:list={["demo-image", `strategy--${strategy}`]}
    style={{ "aspect-ratio": image.width / image.height }}
  >
    <button
      type="button"
      onclick="this.parentNode.classList.toggle('hide-image')"
      title="Toggle image"
      class="button"
    >
      <span class="show-if-hidden"><EyeIcon /> Show image</span>
      <span class="show-if-visible"><EyeOffIcon /> Hide image</span>
    </button>

    <thumb-hash {strategy} value={hash}></thumb-hash>
    <Image src={image} alt="A bird." loading="lazy" />
  </figure>
</div>
